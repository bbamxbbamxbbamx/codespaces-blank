
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v70=0;while true do if (v70==0) then v19=v0(v3(v30,1,1));return "";end end else local v71=0;local v72;while true do if (v71==0) then v72=v2(v0(v30,16));if v19 then local v98=v5(v72,v19);v19=nil;return v98;else return v72;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v73=0 + 0 ;local v74;while true do if (v73==(0 -(0 + 0))) then v74=(v31/(2^(v32-(878 -(282 + 595)))))%((1639 -((2480 -(892 + 65)) + 114))^(((v33-(1 + 0)) -(v32-(2 -1))) + (1 -0))) ;return v74-(v74%(1 -0)) ;end end else local v75=0 -0 ;local v76;while true do if ((619 -(555 + 64))==v75) then v76=(933 -(857 + 74))^(v32-1) ;return (((v31%(v76 + v76))>=v76) and (569 -(367 + 201))) or (927 -((510 -296) + 713)) ;end end end end local function v21()local v34=0 + 0 ;local v35;while true do if (v34==(1 -0)) then return v35;end if (v34==((0 -0) -0)) then v35=v1(v16,v18,v18);v18=v18 + (351 -(87 + 263)) ;v34=181 -(67 + 113) ;end end end local function v22()local v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (7 -5) ;return (v37 * (1208 -(802 + 150))) + v36 ;end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (10 -6) ;return (v41 * 16777216) + (v40 * (118879 -53343)) + (v39 * (187 + 69)) + v38 ;end local function v24()local v42=997 -(915 + 82) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==((2 + 0) -1)) then v45=1 + 0 ;v46=(v20(v44,1 -0 ,20) * ((1189 -((3902 -2833) + 118))^32)) + v43 ;v42=4 -2 ;end if (v42==(3 -1)) then v47=v20(v44,4 + 17 ,54 -23 );v48=((v20(v44,32 + 0 )==(792 -(368 + 423))) and  -(3 -2)) or (19 -(10 + 8)) ;v42=11 -8 ;end if ((445 -((1477 -1061) + 26))==v42) then if (v47==((859 -(814 + 45)) -0)) then if (v46==(0 + 0)) then return v48 * 0 ;else v47=1 -(0 -0) ;v45=438 -(145 + 293) ;end elseif (v47==(2477 -(44 + 21 + 365))) then return ((v46==(1486 -(998 + 488))) and (v48 * ((1 + 0 + 0)/0))) or (v48 * NaN) ;end return v8(v48,v47-(838 + 185) ) * (v45 + (v46/((887 -(261 + 624))^((1463 -639) -(201 + (1651 -(1020 + 60))))))) ;end if (v42==(1138 -(116 + 1022))) then v43=v23();v44=v23();v42=4 -3 ;end end end local function v25(v49)local v50;if  not v49 then local v77=1423 -(630 + 793) ;while true do if (v77==(0 -0)) then v49=v23();if (v49==(0 -0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;local v51={};for v66=1 + 0 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=1665 -(970 + 695) ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v68=0;local v69;while true do if ((0 -0)==v68) then v69=0;while true do if (v69==0) then if (v52~=(1991 -(582 + 1408))) then else local v103=0 -0 ;while true do if (v103==(1 -0)) then for v115=3 -2 ,v57 do local v116=0;local v117;local v118;while true do if (v116~=(1824 -(1195 + 629))) then else local v127=0;while true do if (v127==(0 -0)) then local v139=0;while true do if (0~=v139) then else v117=v21();v118=nil;v139=242 -(187 + 54) ;end if (v139==(781 -(162 + 618))) then v127=1 + 0 ;break;end end end if (v127==(1 + 0)) then v116=1;break;end end end if (v116~=1) then else if (v117==1) then v118=v21()~=0 ;elseif (v117==(3 -1)) then v118=v24();elseif (v117==3) then v118=v25();end v58[v115]=v118;break;end end end v56[3]=v21();v103=2 -0 ;end if (v103~=2) then else v52=1 + 1 ;break;end if (v103==(1636 -(1373 + 263))) then v57=v23();v58={};v103=1;end end end if (v52~=0) then else local v104=0;local v105;while true do if (v104~=(1000 -(451 + 549))) then else v105=0;while true do if (v105==(0 + 0)) then local v125=0 -0 ;while true do if (v125==(0 -0)) then v53={};v54={};v125=1;end if (v125==1) then v105=1385 -(746 + 638) ;break;end end end if (v105==(1 + 0)) then local v126=0;while true do if (v126~=(0 -0)) then else v55={};v56={v53,v54,nil,v55};v126=1;end if (v126==1) then v105=1 + 1 ;break;end end end if (v105==(562 -(306 + 254))) then v52=1 + 0 ;break;end end break;end end end v69=1;end if (1~=v69) then else if (v52==(3 -1)) then local v106=0;while true do local v107=0;while true do if (v107~=0) then else if ((1467 -(899 + 568))==v106) then for v129=1 + 0 ,v23() do local v130=0;local v131;local v132;local v133;local v134;while true do if (v130~=(2 -1)) then else v133=nil;v134=nil;v130=2;end if (v130==2) then while true do if ((604 -(268 + 335))~=v131) then else v134=nil;while true do if (v132~=1) then else while true do if (v133==(290 -(60 + 230))) then v134=v21();if (v20(v134,573 -(426 + 146) ,1)~=(0 + 0)) then else local v140=1456 -(282 + 1174) ;local v141;local v142;local v143;local v144;while true do if (v140~=(811 -(569 + 242))) then else local v145=0 -0 ;while true do if (v145==0) then v141=0 + 0 ;v142=nil;v145=1;end if (v145~=(1025 -(706 + 318))) then else v140=1;break;end end end if (2==v140) then while true do if ((1253 -(721 + 530))~=v141) then else local v146=1271 -(945 + 326) ;local v147;while true do if (v146~=0) then else v147=0;while true do if (v147~=1) then else v141=3;break;end if (v147~=(0 -0)) then else if (v20(v143,1,1 + 0 )~=(701 -(271 + 429))) then else v144[2]=v58[v144[2 + 0 ]];end if (v20(v143,1502 -(1408 + 92) ,2)==1) then v144[3]=v58[v144[3]];end v147=1087 -(461 + 625) ;end end break;end end end if (v141~=(1291 -(993 + 295))) then else if (v20(v143,1 + 2 ,3)~=(1172 -(418 + 753))) then else v144[2 + 2 ]=v58[v144[4]];end v53[v129]=v144;break;end if (0==v141) then local v149=0 + 0 ;while true do if (v149~=(0 + 0)) then else v142=v20(v134,2,1 + 2 );v143=v20(v134,4,6);v149=530 -(406 + 123) ;end if (v149~=(1770 -(1749 + 20))) then else v141=1 + 0 ;break;end end end if (v141~=(1323 -(1249 + 73))) then else local v150=0 + 0 ;while true do if (v150==(1146 -(466 + 679))) then v141=2;break;end if (v150~=(0 -0)) then else v144={v22(),v22(),nil,nil};if (v142==0) then local v153=0;local v154;local v155;local v156;while true do if ((0 + 0)==v153) then v154=0 -0 ;v155=nil;v153=1;end if (v153~=(2 -1)) then else v156=nil;while true do if (v154~=1) then else while true do if (v155~=(114 -(4 + 110))) then else v156=584 -(57 + 527) ;while true do if (v156==0) then v144[1430 -(41 + 1386) ]=v22();v144[4]=v22();break;end end break;end end break;end if (0==v154) then local v163=0;while true do if (1==v163) then v154=1;break;end if (v163~=(103 -(17 + 86))) then else v155=0 + 0 ;v156=nil;v163=1 -0 ;end end end end break;end end elseif (v142==1) then v144[3]=v23();elseif (v142==(5 -3)) then v144[169 -(122 + 44) ]=v23() -(2^(27 -11)) ;elseif (v142~=3) then else local v164=0 -0 ;local v165;while true do if (v164~=(0 + 0)) then else v165=0 + 0 ;while true do if (v165~=(0 -0)) then else v144[3]=v23() -((67 -(30 + 35))^16) ;v144[3 + 1 ]=v22();break;end end break;end end end v150=1;end end end end break;end if (v140~=(1258 -(1043 + 214))) then else v143=nil;v144=nil;v140=7 -5 ;end end end break;end end break;end if (v132==(1212 -(323 + 889))) then v133=0;v134=nil;v132=2 -1 ;end end break;end if (v131~=(580 -(361 + 219))) then else v132=320 -(53 + 267) ;v133=nil;v131=1;end end break;end if (v130~=(0 + 0)) then else v131=413 -(15 + 398) ;v132=nil;v130=983 -(18 + 964) ;end end end for v135=1,v23() do v54[v135-(3 -2) ]=v28();end v106=1;end if (v106==1) then return v56;end break;end end end end break;end end break;end end end end local function v29(v59,v60,v61)local v62=0;local v63;local v64;local v65;while true do if (1==v62) then v65=v59[3];return function(...)local v81=v63;local v82=v64;local v83=v65;local v84=v27;local v85=1;local v86= -1;local v87={};local v88={...};local v89=v12("#",...) -1 ;local v90={};local v91={};for v95=0,v89 do if (v95>=v83) then v87[v95-v83 ]=v88[v95 + 1 ];else v91[v95]=v88[v95 + 1 ];end end local v92=(v89-v83) + 1 ;local v93;local v94;while true do v93=v81[v85];v94=v93[1];if (v94<=4) then if (v94<=1) then if (v94==0) then v91[v93[2]]();else v91[v93[2]]=v93[3];end elseif (v94<=2) then do return;end elseif (v94>3) then v91[v93[2]]=v61[v93[3]];else local v121=0;local v122;while true do if (v121==0) then v122=v93[2];v91[v122]=v91[v122](v91[v122 + 1 ]);break;end end end elseif (v94<=6) then if (v94==5) then local v110=v93[2];v91[v110]=v91[v110](v91[v110 + 1 ]);else v91[v93[2]]=v61[v93[3]];end elseif (v94<=7) then do return;end elseif (v94>8) then v91[v93[2]]();else v91[v93[2]]=v93[3];end v85=v85 + 1 ;end end;end if (v62==0) then v63=v59[1];v64=v59[2];v62=1;end end end return v29(v28(),{},v17)(...);end v15("LOL!023O00030A3O006C6F6164737472696E67039D0D2O003130386F63616C20613D746F737472696E672867616D652E506C61796572732E4C6F63616C506C617965722E436861726163746572293B0A696620612O3D2O227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A7063612O6C2866756E6374696F6E28290A67616D652E5265706C69636174656453746F726167652E496E746572616374696F6E2E42616E3A466972655365727665722822E9BB91E5908DE58D9522290A656E64290A67616D652E506C61796572732E4C6F63616C506C617965723A4B69636B2822E4B88DE8A681E8B791E8B7AF22290A656C7365206C6F6164737472696E672867616D653A482O74704765742822682O7470733A2O2F706173746562696E2E636F6D2F7261772F3655786846677146222O2928290A656C7365696620612O3D222O62616D782O62616D782O62616D78227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D222O31343531342O6A717765227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2279737869786978697869227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D224D616E6D616368696E653O36227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D222O792O67313734227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2277633O797A787163227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D226E616E677561736869786965227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D224B41534F505445227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D226F6463756B76227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2268616F7A656E67727569313437323538227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2262616979756368656E677869227468656E200A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2262646F626479737879227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2231323371757770656F227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D227869616F72697A697368757A68693O36227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D223532623235227468656E200A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22696B756E626F6269227468656E200A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2249776F776F2O652O69227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22417265796F756D616B696E6773746F7279227468656E202O2DE5B08FE58C970A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D226A6679726F686667667572227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22452O68736273756A227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22322O3671776572227468656E202O2D43424DE4BD9CE880850A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D223139383638317A786376626E6D227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22686A686A2O6B696B227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22335F333570227468656E200A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D22732O68646A6C646E227468656E0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2DE4BB8AE5A4A9E4BD93E9AA8CE6999AE4B88A0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2D31E5A4A9E4BD93E9AA8CE4B8ADE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2DE4BB8AE5A4A9E4BD93E9AA8CE4B88BE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E2O202O2D31E5A4A9E4BD93E9AA8CE4B88BE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2DE4BB8AE5A4A9E4BD93E9AA8CE4B88BE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2D31E5A4A9E4BD93E9AA8CE4B88BE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E2O202O2D31E5A4A9E4BD93E9AA8CE4B88BE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2DE4BB8AE5A4A9E4BD93E9AA8CE4B88BE58D880A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2DE4BB8AE5A4A9E4BD93E9AA8CE6999AE4B88A0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2D31E5A4A9E4BD93E9AA8CE6999AE4B88A0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2D31E5A4A9E4BD93E9AA8CE6999AE4B88A0A5F472E2O62616D782O62616D782O62616D783D747275650A656C7365696620612O3D2O227468656E202O2D32E5A4A9E4BD93E9AA8CE6999AE4B88A0A5F472E2O62616D782O62616D782O62616D783D747275650A656E640A6966205F472E2O62616D782O62616D782O62616D782O3D74727565207468656E0A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D2022E6849FE8B0A2E4BDBFE794A8E59CB0E5B2A9E8849AE69CAC22207D290A776169742831290A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D2022E8849AE69CACE6ADA3E59CA8E58AA0E82OBDE8AFB7E88090E5BF83E7AD89E5BE8522207D290A776169742835290A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D2022E8849AE69CACE58AA0E82OBDE68890E58A9F22207D290A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D20612O2E22E6ACA2E8BF8E22207D292O0A4O206C6F6164737472696E672867616D653A482O74704765742822682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F646979616E2O31343531342F646979616E2F6D61696E2F32222O2928292O2D20E8BE93E585A5E4BDA0E79A84E4BBA3E7A081E588B0E8BF99E9878C0A4O20656C73650A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D2022E4BDA0E6B2A1E69C89E8A2ABE58897E4B8BAE799BDE5908DE58D952C33E7A792E5908EE5B086E4BDA0E8B8A2E587BA22207D290A776169742831290A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D20223322207D290A776169742831290A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D20223222207D290A776169742831290A67616D652E537461727465724775693A536574436F7265282253656E644E6F74696669636174696F6E222C207B205469746C65203D2022E59CB0E5B2A9223B2054657874203D20223122207D290A776169742831290A67616D652E506C61796572732E4C6F63616C506C617965723A4B69636B28612O2E22E4BDA0E6B2A1E69C89E8A2ABE58897E585A5E799BDE5908DE58D952CE8AFB7E8BF9BE7BEA4E689BEE4BD9CE88085E58F8DE9A6882C2O51E58FB72O33383635313337303322290A656E6400053O0012043O00013O001208000100024O00033O000200022O00093O000100012O00073O00017O00",v9(),...);end
